"use strict";(self.webpackChunkresearch=self.webpackChunkresearch||[]).push([[321],{5680:(e,t,r)=>{r.d(t,{xA:()=>d,yg:()=>m});var o=r(6540);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,o,a=function(e,t){if(null==e)return{};var r,o,a={},n=Object.keys(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=o.createContext({}),l=function(e){var t=o.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=l(e.components);return o.createElement(s.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var r=e.components,a=e.mdxType,n=e.originalType,s=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),p=l(r),h=a,m=p["".concat(s,".").concat(h)]||p[h]||u[h]||n;return r?o.createElement(m,i(i({ref:t},d),{},{components:r})):o.createElement(m,i({ref:t},d))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=r.length,i=new Array(n);i[0]=h;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[p]="string"==typeof e?e:a,i[1]=c;for(var l=2;l<n;l++)i[l]=r[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}h.displayName="MDXCreateElement"},3514:(e,t,r)=>{r.d(t,{A:()=>y});var o=r(6540),a=r(53),n=r(1754),i=r(5489),c=r(6654),s=r(1312);const l={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};function d(e){let{href:t,children:r}=e;return o.createElement(i.A,{href:t,className:(0,a.A)("card padding--lg",l.cardContainer)},r)}function p(e){let{href:t,icon:r,title:n,description:i}=e;return o.createElement(d,{href:t},o.createElement("h2",{className:(0,a.A)("text--truncate",l.cardTitle),title:n},r," ",n),i&&o.createElement("p",{className:(0,a.A)("text--truncate",l.cardDescription),title:i},i))}function u(e){let{item:t}=e;const r=(0,n._o)(t);return r?o.createElement(p,{href:r,icon:"\ud83d\uddc3\ufe0f",title:t.label,description:t.description??(0,s.T)({message:"{count} items",id:"theme.docs.DocCard.categoryDescription",description:"The default description for a category card in the generated index about how many items this category includes"},{count:t.items.length})}):null}function h(e){let{item:t}=e;const r=(0,c.A)(t.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",a=(0,n.cC)(t.docId??void 0);return o.createElement(p,{href:t.href,icon:r,title:t.label,description:t.description??a?.description})}function m(e){let{item:t}=e;switch(t.type){case"link":return o.createElement(h,{item:t});case"category":return o.createElement(u,{item:t});default:throw new Error(`unknown item type ${JSON.stringify(t)}`)}}function f(e){let{className:t}=e;const r=(0,n.$S)();return o.createElement(y,{items:r.items,className:t})}function y(e){const{items:t,className:r}=e;if(!t)return o.createElement(f,e);const i=(0,n.d1)(t);return o.createElement("section",{className:(0,a.A)("row",r)},i.map(((e,t)=>o.createElement("article",{key:t,className:"col col--6 margin-bottom--lg"},o.createElement(m,{item:e})))))}},8207:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var o=r(8168),a=(r(6540),r(5680)),n=r(3514);const i={title:"Block production"},c=void 0,s={unversionedId:"Polkadot/protocols/block-production/index",id:"Polkadot/protocols/block-production/index",title:"Block production",description:"The relay chain in Polkadot is built with the underlying proof-of-stake (POS) block production mechanism by validators. The currently deployed mechanism is a hybrid of BABE and Aura. We plan to replace BABE+Aura with Sassafras in the future.",source:"@site/docs/Polkadot/protocols/block-production/index.md",sourceDirName:"Polkadot/protocols/block-production",slug:"/Polkadot/protocols/block-production/",permalink:"/Polkadot/protocols/block-production/",draft:!1,editUrl:"https://github.com/w3f/research/blob/master/docs/Polkadot/protocols/block-production/index.md",tags:[],version:"current",frontMatter:{title:"Block production"},sidebar:"sidebar",previous:{title:"Computing a balanced solution",permalink:"/Polkadot/protocols/NPoS/Balancing"},next:{title:"BABE",permalink:"/Polkadot/protocols/block-production/Babe"}},l={},d=[],p={toc:d},u="wrapper";function h(e){let{components:t,...r}=e;return(0,a.yg)(u,(0,o.A)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("p",null,"The relay chain in Polkadot is built with the underlying proof-of-stake (POS) block production mechanism by validators. The currently deployed mechanism is a hybrid of BABE and Aura. We plan to replace BABE+Aura with Sassafras in the future."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"BABE:")," A PoS protocol provides a way to elect validators to produce a block in the corresponding time slot. BABE's election is based on verifiable random function (VRF) of validators invented by David et al. for ",(0,a.yg)("a",{parentName:"p",href:"https://eprint.iacr.org/2017/573.pdf"},"Ouroboros Praos")," i.e., if a VRF output of a validator is less than a pre-defined threshold, then the validator is legitimate to produce a block. So, one validator or more than one validator or no validator can be elected. This election mechanism is completely private. In other words, no one can guess who is elected until the elected validator publishes a block. The privacy property is very critical for the blockchain security because it is indispensable for achieving security against an adaptive adversary who can corrupt any validator at any time. The drawback of this election mechanism is that no validator will be elected in a significant amount of time. So, validators waste these times by doing nothing which causes slightly worse (and uneven) throughput. Therefore, we fill the empty slots with blocks generated by validators who are deterministically selected by ",(0,a.yg)("a",{parentName:"p",href:"https://eprint.iacr.org/2018/1079.pdf"},"Aura"),". Aura's election mechanism is not private so it is not secure against an adaptive adversary. For example, the adversary can prepare a DDOS attack on the elected validator by Aura to prevent him to publish his block because the adversary knows who is elected beforehand. Therefore, filling the empty slots with Aura blocks is not a solution in the adaptive adversarial model to prevent empty slots. Nevertheless we note that BABE+Aura is secure (safe and live) in the adaptive adversarial model - the security reduces to the BABE's security. It just does not prevent theoretically to have empty slots that we need to have a better throughput in the adaptive adversarial model."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Sassafras:")," We construct Sassafras to obtain both security and non-empty slot property in the relay chain in the adaptive adversarial model. The election mechanism is based on the new primitive 'ring-VRF' that we define. Ring-VRF has the same properties as VRF e.g. randomness, verifiability of the output but also has verifiability property without knowing the public key of the validator who generated the output. In short, all validators generate a good amount of ring VRF outputs. Then, these outputs are sorted after verification by all validators to determine the order of the validators in the block production. Since a ring-VRF output does not reveal the identity of the validators for the verification, the privacy is preserved. Another good property of Sassafras is that there is only ",(0,a.yg)("strong",{parentName:"p"},"one")," validator is selected for a specified time interval. This property is useful to have fewer forks which is better for the parachain performance."),(0,a.yg)(n.A,{mdxType:"DocCardList"}))}h.isMDXComponent=!0}}]);